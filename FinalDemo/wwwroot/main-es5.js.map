{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/form-account/form-account.component.ts","webpack:///src/app/form-account/form-account.component.html","webpack:///src/app/image-chat/image-chat.component.html","webpack:///src/app/image-chat/image-chat.component.ts","webpack:///src/app/image-list/image-list.component.ts","webpack:///src/app/image-list/image-list.component.html","webpack:///src/app/page-header/page-header.component.html","webpack:///src/app/page-header/page-header.component.ts","webpack:///src/app/page-home/page-home.component.html","webpack:///src/app/page-home/page-home.component.ts","webpack:///src/app/page-image/page-image.component.ts","webpack:///src/app/page-image/page-image.component.html","webpack:///src/app/page-list/page-list.component.ts","webpack:///src/app/page-list/page-list.component.html","webpack:///src/app/services/account.service.ts","webpack:///src/app/services/api.service.ts","webpack:///src/app/services/chat.service.ts","webpack:///src/app/services/image.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","component","path","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","FormAccountComponent","accountService","router","username","password","label","formSubmit","emit","submit","ImageChatComponent","activatedRoute","imageService","chatService","newMessage","imageId$","paramMap","pipe","refCount","bufferSize","x","parseInt","get","image$","getById","messages$","interval","imageId","getMessagesForImageId","trim","console","log","subscribe","post","alert","JSON","stringify","ImageListComponent","images$","getAll","PageHeaderComponent","logout","navigate","PageHomeComponent","login","createAccount","PageImageComponent","PageListComponent","AccountService","api","stored","localStorage","getItem","sessionKey","toPromise","undefined","removeItem","setItem","providedIn","ApiService","httpClient","url","data","ChatService","imgId","message","ImageService","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageHomeComponent } from './page-home/page-home.component';\nimport { PageImageComponent } from './page-image/page-image.component';\nimport { PageListComponent } from './page-list/page-list.component';\n\nconst routes: Routes = [\n  { component: PageHomeComponent, path: \"\" },\n  { component: PageListComponent, path: \"images\" },\n  { component: PageImageComponent, path: \"images/:imageId\" },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Front2';\n}\n","<app-page-header></app-page-header>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormAccountComponent } from './form-account/form-account.component';\nimport { PageHomeComponent } from './page-home/page-home.component';\nimport { PageImageComponent } from './page-image/page-image.component';\nimport { PageHeaderComponent } from './page-header/page-header.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { ImageListComponent } from './image-list/image-list.component';\nimport { ImageChatComponent } from './image-chat/image-chat.component';\nimport { PageListComponent } from './page-list/page-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageHomeComponent,\n    PageImageComponent,\n    PageHeaderComponent,\n    FormAccountComponent,\n    ImageListComponent,\n    ImageChatComponent,\n    PageListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AccountService } from '../services/account.service';\nimport { Router } from '@angular/router';\n\nexport interface FormAccountSubmitData {\n  password: string;\n  username: string;\n}\n\n@Component({\n  selector: 'app-form-account',\n  templateUrl: './form-account.component.html',\n  styleUrls: ['./form-account.component.css']\n})\nexport class FormAccountComponent implements OnInit {\n  username = \"\";\n  password = \"\";\n  @Input() label = \"Submit\";\n  @Output() formSubmit = new EventEmitter<FormAccountSubmitData>();\n\n  constructor(\n    private readonly accountService: AccountService,\n    private readonly router: Router,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  submit() {\n    this.formSubmit.emit({\n      username: this.username,\n      password: this.password\n    });\n  }\n\n}\n","<form (submit)=\"submit()\">\n  <label>\n    <span>Username</span>\n    <input\n      type=\"text\"\n      name=\"username\"\n      [(ngModel)]=\"username\"\n    >\n  </label>\n\n  <label>\n    <span>Password</span>\n    <input\n      type=\"password\"\n      name=\"password\"\n      [(ngModel)]=\"password\"\n    >\n  </label>\n\n  <button type=\"submit\">{{label}}</button>\n</form>\n","<img\n  *ngIf=\"image$|async as image\"\n  [src]=\"image.imageUrl\"\n>\n\n<div *ngIf=\"messages$|async as messages\">\n  <div class=\"messages\">\n    <div\n      *ngFor=\"let msg of messages\"\n      class=\"messages__item\"\n    >\n      <div class=\"username\">{{msg.username}}</div>\n      <div class=\"content\">{{msg.message}}</div>\n    </div>\n  </div>\n  <div class=\"input-container\">\n    <button (click)=\"send()\">Send</button>\n    <input\n      [(ngModel)]=\"newMessage\"\n      (keydown.enter)=\"send()\"\n    >\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router'\nimport { map, switchMap, shareReplay, take } from 'rxjs/operators';\nimport { ImageService, Image } from '../services/image.service';\nimport { ChatService, ChatMessage } from '../services/chat.service';\nimport { Observable, combineLatest, interval } from 'rxjs';\n\n@Component({\n  selector: 'app-image-chat',\n  templateUrl: './image-chat.component.html',\n  styleUrls: ['./image-chat.component.css']\n})\nexport class ImageChatComponent implements OnInit {\n  imageId$: Observable<number>;\n  image$: Observable<Image>;\n  messages$: Observable<ChatMessage[]>;\n  newMessage = \"\";\n\n  constructor(\n    private readonly activatedRoute: ActivatedRoute,\n    private readonly imageService: ImageService,\n    private readonly chatService: ChatService,\n  ) { }\n\n  ngOnInit(): void {\n    this.imageId$ = this.activatedRoute.paramMap.pipe(\n      shareReplay({ refCount: true, bufferSize: 1 }),\n      map(x => parseInt(x.get(\"imageId\"), 10)),\n    );\n\n    this.image$ = this.imageId$.pipe(\n      switchMap(x => this.imageService.getById(x)),\n    );\n\n    this.messages$ = combineLatest([interval(1000), this.imageId$])\n      .pipe(\n        map(([interval, imageId]) => imageId),\n        switchMap(x => this.chatService.getMessagesForImageId(x))\n      );\n  }\n\n  async send() {\n    this.newMessage = this.newMessage.trim();\n    if (this.newMessage === \"\") {\n      return;\n    }\n\n    console.log(\"Waiting\");\n\n\n    this.imageId$.pipe(take(1)).subscribe(async (imageId) => {\n      try {\n        console.log(\"posting\");\n        await this.chatService.post(imageId, this.newMessage);\n        this.newMessage = \"\"\n      } catch (error) {\n        alert(\"Unable to post message: \" + JSON.stringify(error, null, 2));\n      }\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ImageService, Image } from '../services/image.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-image-list',\n  templateUrl: './image-list.component.html',\n  styleUrls: ['./image-list.component.css']\n})\nexport class ImageListComponent implements OnInit {\n  images$: Observable<Image[]>;\n  constructor(\n    private readonly imageService: ImageService,\n  ) { }\n\n  ngOnInit(): void {\n    this.images$ = this.imageService.getAll();\n  }\n\n}\n","<div class=\"containe\">\n  <a\n    *ngFor=\"let image of images$|async\"\n    class=\"image-button\"\n    [routerLink]=\"['/images', image.id]\"\n  >\n    <img [src]=\"image.imageUrl\">\n  </a>\n</div>\n","<a [routerLink]=\"['/']\">🏠</a>\n<div class=\"title\">ImageChatApp</div>\n<button\n  *ngIf=\"accountService.sessionKey\"\n  (click)=\"logout()\"\n>Logout</button>\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from '../services/account.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-page-header',\n  templateUrl: './page-header.component.html',\n  styleUrls: ['./page-header.component.css']\n})\nexport class PageHeaderComponent implements OnInit {\n\n  constructor(\n    public readonly accountService: AccountService,\n    private readonly router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  async logout() {\n    await this.accountService.logout();\n    this.router.navigate([\"/\"]);\n  }\n\n}\n","<div\n  *ngIf=\"!accountService.sessionKey\"\n  class=\"container\"\n>\n  <div class=\"col\">\n    <div class=\"header\">Create account</div>\n    <app-form-account\n      [label]=\"'Create Account'\"\n      (formSubmit)=\"createAccount($event)\"\n    ></app-form-account>\n  </div>\n\n  <div class=\"col\">\n    <div class=\"header\">Login</div>\n    <app-form-account\n      [label]=\"'Login'\"\n      (formSubmit)=\"login($event)\"\n    ></app-form-account>\n  </div>\n\n</div>\n\n<div *ngIf=\"accountService.sessionKey\">\n  <app-image-list></app-image-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormAccountSubmitData } from '../form-account/form-account.component';\nimport { AccountService } from '../services/account.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-page-home',\n  templateUrl: './page-home.component.html',\n  styleUrls: ['./page-home.component.css']\n})\nexport class PageHomeComponent implements OnInit {\n  constructor(\n    public readonly accountService: AccountService,\n    private readonly router: Router,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  async login(e: FormAccountSubmitData) {\n    try {\n      await this.accountService.login(e.username, e.password);\n    } catch (error) {\n      alert(`Unable to login: ${JSON.stringify(error, null, 2)}`);\n    }\n  }\n\n  async createAccount(e: FormAccountSubmitData) {\n    try {\n      await this.accountService.createAccount(e.username, e.password);\n      await this.accountService.login(e.username, e.password);\n    } catch (error) {\n      alert(`Unable to login: ${JSON.stringify(error, null, 2)}`);\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-image',\n  templateUrl: './page-image.component.html',\n  styleUrls: ['./page-image.component.css']\n})\nexport class PageImageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-image-chat></app-image-chat>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-list',\n  templateUrl: './page-list.component.html',\n  styleUrls: ['./page-list.component.css']\n})\nexport class PageListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-image-list></app-image-list>\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { tap, map } from 'rxjs/operators';\n\ninterface Session {\n  id: number;\n  userId: number;\n  sessionKey: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  sessionKey: string;\n\n  constructor(\n    private readonly api: ApiService,\n  ) {\n    var stored = localStorage.getItem(\"ICA_SessionKey\");\n    if (stored) {\n      this.sessionKey = stored;\n    }\n  }\n\n  createAccount(username: string, password: string) {\n    return this.api.post(`/api/account`, { username, password }).toPromise();\n  }\n\n  logout() {\n    this.sessionKey = undefined;\n    localStorage.removeItem(\"ICA_SessionKey\");\n    return Promise.resolve();\n  }\n\n  login(username: string, password: string) {\n    return this.api.post<Session>(`/api/account/login`,\n      { username, password })\n      .pipe(\n        map(x => x.sessionKey),\n        tap(x => {\n          this.sessionKey = x;\n          localStorage.setItem(\"ICA_SessionKey\", x);\n        })\n      ).toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  constructor(private readonly httpClient: HttpClient) {\n  }\n\n  get<T>(url: string): Observable<T> {\n    return this.httpClient.get<T>(url);\n  }\n  post<R>(url: string, data: any): Observable<R> {\n    return this.httpClient.post<R>(url, data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiService } from './api.service';\nimport { AccountService } from './account.service';\n\nexport interface ChatMessage {\n  message: string;\n  username: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n  constructor(\n    private readonly api: ApiService,\n    private readonly accountService: AccountService,\n  ) { }\n\n  getMessagesForImageId(imgId: number): Observable<ChatMessage[]> {\n    return this.api.get<ChatMessage[]>(`/api/chat/${imgId}`);\n  }\n\n  post(imgId: number, message: string) {\n    const sessionKey = this.accountService.sessionKey\n    return this.api.post(`/api/chat/${imgId}`, {\n      sessionKey,\n      message,\n    }).toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiService } from './api.service';\n\nexport interface Image {\n  id: number;\n  imageUrl: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n\n  constructor(\n    private readonly api: ApiService,\n  ) { }\n\n  getAll(): Observable<Image[]> {\n    return this.api.get<Image[]>('/api/image');\n  }\n\n  getById(id: number): Observable<Image> {\n    return this.api.get<Image>(`/api/image/${id}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}