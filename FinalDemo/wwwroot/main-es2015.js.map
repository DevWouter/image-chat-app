{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/form-account/form-account.component.ts","./src/app/form-account/form-account.component.html","./src/app/image-chat/image-chat.component.ts","./src/app/image-chat/image-chat.component.html","./src/app/image-list/image-list.component.ts","./src/app/image-list/image-list.component.html","./src/app/page-header/page-header.component.ts","./src/app/page-header/page-header.component.html","./src/app/page-home/page-home.component.ts","./src/app/page-home/page-home.component.html","./src/app/page-image/page-image.component.ts","./src/app/page-image/page-image.component.html","./src/app/page-list/page-list.component.ts","./src/app/page-list/page-list.component.html","./src/app/services/account.service.ts","./src/app/services/api.service.ts","./src/app/services/chat.service.ts","./src/app/services/image.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageHomeComponent } from './page-home/page-home.component';\nimport { PageImageComponent } from './page-image/page-image.component';\nimport { PageListComponent } from './page-list/page-list.component';\n\nconst routes: Routes = [\n  { component: PageHomeComponent, path: \"\" },\n  { component: PageListComponent, path: \"images\" },\n  { component: PageImageComponent, path: \"images/:imageId\" },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Front2';\n}\n","<app-page-header></app-page-header>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormAccountComponent } from './form-account/form-account.component';\nimport { PageHomeComponent } from './page-home/page-home.component';\nimport { PageImageComponent } from './page-image/page-image.component';\nimport { PageHeaderComponent } from './page-header/page-header.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { ImageListComponent } from './image-list/image-list.component';\nimport { ImageChatComponent } from './image-chat/image-chat.component';\nimport { PageListComponent } from './page-list/page-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageHomeComponent,\n    PageImageComponent,\n    PageHeaderComponent,\n    FormAccountComponent,\n    ImageListComponent,\n    ImageChatComponent,\n    PageListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AccountService } from '../services/account.service';\nimport { Router } from '@angular/router';\n\nexport interface FormAccountSubmitData {\n  password: string;\n  username: string;\n}\n\n@Component({\n  selector: 'app-form-account',\n  templateUrl: './form-account.component.html',\n  styleUrls: ['./form-account.component.css']\n})\nexport class FormAccountComponent implements OnInit {\n  username = \"\";\n  password = \"\";\n  @Input() label = \"Submit\";\n  @Output() formSubmit = new EventEmitter<FormAccountSubmitData>();\n\n  constructor(\n    private readonly accountService: AccountService,\n    private readonly router: Router,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  submit() {\n    this.formSubmit.emit({\n      username: this.username,\n      password: this.password\n    });\n  }\n\n}\n","<form (submit)=\"submit()\">\n  <label>\n    <span>Username</span>\n    <input\n      type=\"text\"\n      name=\"username\"\n      [(ngModel)]=\"username\"\n    >\n  </label>\n\n  <label>\n    <span>Password</span>\n    <input\n      type=\"password\"\n      name=\"password\"\n      [(ngModel)]=\"password\"\n    >\n  </label>\n\n  <button type=\"submit\">{{label}}</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router'\nimport { map, switchMap, shareReplay, take } from 'rxjs/operators';\nimport { ImageService, Image } from '../services/image.service';\nimport { ChatService, ChatMessage } from '../services/chat.service';\nimport { Observable, combineLatest, interval } from 'rxjs';\n\n@Component({\n  selector: 'app-image-chat',\n  templateUrl: './image-chat.component.html',\n  styleUrls: ['./image-chat.component.css']\n})\nexport class ImageChatComponent implements OnInit {\n  imageId$: Observable<number>;\n  image$: Observable<Image>;\n  messages$: Observable<ChatMessage[]>;\n  newMessage = \"\";\n\n  constructor(\n    private readonly activatedRoute: ActivatedRoute,\n    private readonly imageService: ImageService,\n    private readonly chatService: ChatService,\n  ) { }\n\n  ngOnInit(): void {\n    this.imageId$ = this.activatedRoute.paramMap.pipe(\n      shareReplay({ refCount: true, bufferSize: 1 }),\n      map(x => parseInt(x.get(\"imageId\"), 10)),\n    );\n\n    this.image$ = this.imageId$.pipe(\n      switchMap(x => this.imageService.getById(x)),\n    );\n\n    this.messages$ = combineLatest([interval(1000), this.imageId$])\n      .pipe(\n        map(([interval, imageId]) => imageId),\n        switchMap(x => this.chatService.getMessagesForImageId(x))\n      );\n  }\n\n  async send() {\n    this.newMessage = this.newMessage.trim();\n    if (this.newMessage === \"\") {\n      return;\n    }\n\n    console.log(\"Waiting\");\n\n\n    this.imageId$.pipe(take(1)).subscribe(async (imageId) => {\n      try {\n        console.log(\"posting\");\n        await this.chatService.post(imageId, this.newMessage);\n        this.newMessage = \"\"\n      } catch (error) {\n        alert(\"Unable to post message: \" + JSON.stringify(error, null, 2));\n      }\n    });\n  }\n\n}\n","<img\n  *ngIf=\"image$|async as image\"\n  [src]=\"image.imageUrl\"\n>\n\n<div *ngIf=\"messages$|async as messages\">\n  <div class=\"messages\">\n    <div\n      *ngFor=\"let msg of messages\"\n      class=\"messages__item\"\n    >\n      <div class=\"username\">{{msg.username}}</div>\n      <div class=\"content\">{{msg.message}}</div>\n    </div>\n  </div>\n  <div class=\"input-container\">\n    <button (click)=\"send()\">Send</button>\n    <input\n      [(ngModel)]=\"newMessage\"\n      (keydown.enter)=\"send()\"\n    >\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ImageService, Image } from '../services/image.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-image-list',\n  templateUrl: './image-list.component.html',\n  styleUrls: ['./image-list.component.css']\n})\nexport class ImageListComponent implements OnInit {\n  images$: Observable<Image[]>;\n  constructor(\n    private readonly imageService: ImageService,\n  ) { }\n\n  ngOnInit(): void {\n    this.images$ = this.imageService.getAll();\n  }\n\n}\n","<div class=\"containe\">\n  <a\n    *ngFor=\"let image of images$|async\"\n    class=\"image-button\"\n    [routerLink]=\"['/images', image.id]\"\n  >\n    <img [src]=\"image.imageUrl\">\n  </a>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from '../services/account.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-page-header',\n  templateUrl: './page-header.component.html',\n  styleUrls: ['./page-header.component.css']\n})\nexport class PageHeaderComponent implements OnInit {\n\n  constructor(\n    public readonly accountService: AccountService,\n    private readonly router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  async logout() {\n    await this.accountService.logout();\n    this.router.navigate([\"/\"]);\n  }\n\n}\n","<a [routerLink]=\"['/']\">🏠</a>\n<div class=\"title\">ImageChatApp</div>\n<button\n  *ngIf=\"accountService.sessionKey\"\n  (click)=\"logout()\"\n>Logout</button>\n","import { Component, OnInit } from '@angular/core';\nimport { FormAccountSubmitData } from '../form-account/form-account.component';\nimport { AccountService } from '../services/account.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-page-home',\n  templateUrl: './page-home.component.html',\n  styleUrls: ['./page-home.component.css']\n})\nexport class PageHomeComponent implements OnInit {\n  constructor(\n    public readonly accountService: AccountService,\n    private readonly router: Router,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  async login(e: FormAccountSubmitData) {\n    try {\n      await this.accountService.login(e.username, e.password);\n    } catch (error) {\n      alert(`Unable to login: ${JSON.stringify(error, null, 2)}`);\n    }\n  }\n\n  async createAccount(e: FormAccountSubmitData) {\n    try {\n      await this.accountService.createAccount(e.username, e.password);\n      await this.accountService.login(e.username, e.password);\n    } catch (error) {\n      alert(`Unable to login: ${JSON.stringify(error, null, 2)}`);\n    }\n  }\n\n}\n","<div\n  *ngIf=\"!accountService.sessionKey\"\n  class=\"container\"\n>\n  <div class=\"col\">\n    <div class=\"header\">Create account</div>\n    <app-form-account\n      [label]=\"'Create Account'\"\n      (formSubmit)=\"createAccount($event)\"\n    ></app-form-account>\n  </div>\n\n  <div class=\"col\">\n    <div class=\"header\">Login</div>\n    <app-form-account\n      [label]=\"'Login'\"\n      (formSubmit)=\"login($event)\"\n    ></app-form-account>\n  </div>\n\n</div>\n\n<div *ngIf=\"accountService.sessionKey\">\n  <app-image-list></app-image-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-image',\n  templateUrl: './page-image.component.html',\n  styleUrls: ['./page-image.component.css']\n})\nexport class PageImageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-image-chat></app-image-chat>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-list',\n  templateUrl: './page-list.component.html',\n  styleUrls: ['./page-list.component.css']\n})\nexport class PageListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-image-list></app-image-list>\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { tap, map } from 'rxjs/operators';\n\ninterface Session {\n  id: number;\n  userId: number;\n  sessionKey: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  sessionKey: string;\n\n  constructor(\n    private readonly api: ApiService,\n  ) {\n    var stored = localStorage.getItem(\"ICA_SessionKey\");\n    if (stored) {\n      this.sessionKey = stored;\n    }\n  }\n\n  createAccount(username: string, password: string) {\n    return this.api.post(`/api/account`, { username, password }).toPromise();\n  }\n\n  logout() {\n    this.sessionKey = undefined;\n    localStorage.removeItem(\"ICA_SessionKey\");\n    return Promise.resolve();\n  }\n\n  login(username: string, password: string) {\n    return this.api.post<Session>(`/api/account/login`,\n      { username, password })\n      .pipe(\n        map(x => x.sessionKey),\n        tap(x => {\n          this.sessionKey = x;\n          localStorage.setItem(\"ICA_SessionKey\", x);\n        })\n      ).toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  constructor(private readonly httpClient: HttpClient) {\n  }\n\n  get<T>(url: string): Observable<T> {\n    return this.httpClient.get<T>(url);\n  }\n  post<R>(url: string, data: any): Observable<R> {\n    return this.httpClient.post<R>(url, data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiService } from './api.service';\nimport { AccountService } from './account.service';\n\nexport interface ChatMessage {\n  message: string;\n  username: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n  constructor(\n    private readonly api: ApiService,\n    private readonly accountService: AccountService,\n  ) { }\n\n  getMessagesForImageId(imgId: number): Observable<ChatMessage[]> {\n    return this.api.get<ChatMessage[]>(`/api/chat/${imgId}`);\n  }\n\n  post(imgId: number, message: string) {\n    const sessionKey = this.accountService.sessionKey\n    return this.api.post(`/api/chat/${imgId}`, {\n      sessionKey,\n      message,\n    }).toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiService } from './api.service';\n\nexport interface Image {\n  id: number;\n  imageUrl: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n\n  constructor(\n    private readonly api: ApiService,\n  ) { }\n\n  getAll(): Observable<Image[]> {\n    return this.api.get<Image[]>('/api/image');\n  }\n\n  getById(id: number): Observable<Image> {\n    return this.api.get<Image>(`/api/image/${id}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}